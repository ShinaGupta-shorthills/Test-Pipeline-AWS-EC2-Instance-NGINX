name: Deploy EC2 Ubuntu Instance

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create SSH key file
        run: |
          echo "${{ secrets.DEVOPS_KEY }}" > devops-key-1.pem
          chmod 400 devops-key-1.pem

      - name: Launch EC2 instance
        id: ec2
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0c7217cdde317cfec \
            --count 1 \
            --instance-type t2.micro \
            --key-name devops-key-1 \
            --security-group-ids sg-03eebec8dc1bbd9df \
            --subnet-id subnet-0ba04bb1a5c049ec7 \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=MyUbuntuInstance}]' \
            --region us-east-1 \
            --query 'Instances[0].InstanceId' \
            --output text)

          echo "Launched instance with ID: $INSTANCE_ID"
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

          # Wait for the instance to be running
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID --region us-east-1

          # Get the public IP of the instance
          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --region us-east-1 \
            --query 'Reservations[0].Instances[0].PublicIpAddress' \
            --output text)

          echo "EC2_PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo "Instance Public IP: $PUBLIC_IP"

      - name: Upload public IP as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ec2-public-ip
          path: ec2_public_ip.txt

    
